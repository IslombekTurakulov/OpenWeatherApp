plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs'
}

android {
    compileSdk 31
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.iuturakulov.openweatherapp"
        minSdk 28
        targetSdk 31
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "BASE_URL", "\"" + getBaseUrl() + "\""
        buildConfigField "String", "APP_ID", "\"" + getAppId() + "\""
        buildConfigField "String", "OLD_BASE", "\"" + getOldBaseUrl() + "\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    viewBinding {
        enabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    def nav_version = "2.3.0"

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    def lifecycle_version = "2.2.0"

    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // ViewModel
    implementation "com.google.android.material:material:1.6.1"

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'androidx.activity:activity-ktx:1.1.0'

    // Navigation components
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Network requests
    implementation "com.squareup.retrofit2:converter-moshi:2.6.2"
    implementation "com.squareup.retrofit2:retrofit:2.8.1"
    implementation "com.squareup.okhttp3:okhttp:4.7.2"
    implementation "com.squareup.okhttp3:logging-interceptor:4.7.2"
    implementation 'com.squareup.moshi:moshi:1.9.3'
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.9.3'

    // Kotlin Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.6"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.6"

    // Dagger-Hilt
    implementation "com.google.dagger:hilt-android:2.28-alpha"
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02'
    kapt "com.google.dagger:hilt-android-compiler:2.28-alpha"
    kapt 'androidx.hilt:hilt-compiler:1.0.0-alpha02'
    // Location service
    implementation 'com.google.android.gms:play-services-location:17.0.0'

    // charts
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    // Circle Image View
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    // Smooth bottom bar
    implementation 'com.github.ibrahimsn98:SmoothBottomBar:1.7.9'
    // Location service
    implementation 'com.google.android.gms:play-services-location:20.0.0'
    // Scalable sp
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.intuit.ssp:ssp-android:1.0.6'
    // Room
    implementation 'androidx.room:room-runtime:2.4.2'
    annotationProcessor 'androidx.room:room-compiler:2.4.2'
    // Bottomsheet color panel
    // implementation 'com.maxkeppeler.sheets:options:2.2.8'
    // Better log messages
    implementation 'com.jakewharton.timber:timber:4.7.1'
    // GSON
    implementation 'com.google.code.gson:gson:2.8.9'
}

def getBaseUrl() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty("base")
}

def getOldBaseUrl() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty("old_base")
}

def getAppId() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty("api")
}